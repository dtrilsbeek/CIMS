# suppress inspection "UnusedProperty" for whole file
# Configuration file
# key = value

# quarkus.log.level=SEVERE


# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.generated-event.connector=smallrye-kafka
%test.mp.messaging.outgoing.generated-event.connector=smallrye-in-memory

mp.messaging.outgoing.generated-event.topic=events
mp.messaging.outgoing.generated-event.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

mp.messaging.outgoing.event-create.connector=smallrye-kafka
%test.mp.messaging.outgoing.event-create.connector=smallrye-in-memory

mp.messaging.outgoing.event-create.topic=events
mp.messaging.outgoing.event-create.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# Configure the Kafka source (we read from it)
mp.messaging.incoming.events.connector=smallrye-kafka
%test.mp.messaging.incoming.events.connector=smallrye-in-memory

mp.messaging.incoming.events.value.deserializer=nl.fhict.s4.models.deserializers.EventModelDeserializer

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.generated-battery.connector=smallrye-kafka
%test.mp.messaging.outgoing.generated-battery.connector=smallrye-in-memory

mp.messaging.outgoing.generated-battery.topic=battery-levels
#mp.messaging.outgoing.generated-battery.value.serializer=org.apache.kafka.common.serialization.FloatSerializer
mp.messaging.outgoing.generated-battery.value.serializer=org.apache.kafka.common.serialization.DoubleSerializer

# Configure the Kafka source (we read from it)
mp.messaging.incoming.battery-levels.connector=smallrye-kafka
%test.mp.messaging.incoming.battery-levels.connector=smallrye-in-memory
#mp.messaging.outgoing.generated-battery.value.serializer=org.apache.kafka.common.serialization.FloatDeserializer
mp.messaging.incoming.battery-levels.value.deserializer=org.apache.kafka.common.serialization.DoubleDeserializer


# API Resource Setup
#quarkus.http.cors.origins=http://localhost:3000,http://localhost:9090
quarkus.http.port=8083
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost,http://localhost:8083
quarkus.http.cors.methods=GET,POST,PUT,DELETE

%dev.quarkus.http.ssl-port=8443
%dev.quarkus.http.ssl.certificate.file=META-INF/resources/localhost.cert
%dev.quarkus.http.ssl.certificate.key-file=META-INF/resources/localhost.key

#quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with, Content-Type,


# Database connection
quarkus.datasource.db-kind = postgresql
#quarkus.datasource.url=vertx-reactive:postgresql://localhost:5432/cims_dev
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/cims_dev
quarkus.datasource.username=cims_dev
quarkus.datasource.password=password

# drop and create the database at startup (use `update` to only update the schema)
%dev.quarkus.hibernate-orm.database.generation = drop-and-create
#%dev.quarkus.hibernate-orm.sql-load-script = no-file
%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql

#./mvnw compile quarkus:dev -Dquarkus.profile=dev-with-data
%dev-with-data.quarkus.hibernate-orm.database.generation = update
%dev-with-data.quarkus.hibernate-orm.sql-load-script = no-file

%prod.quarkus.hibernate-orm.database.generation = none
%prod.quarkus.hibernate-orm.sql-load-script = no-file


%test.quarkus.hibernate-orm.database.generation=drop-and-create


%dev.quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/CIMS-users
%dev.quarkus.oidc.client-id=backend-service

%dev.quarkus.oidc.credentials.secret=2970fb3b-2839-4093-8b4a-b7ac6d857241


%test.quarkus.oidc.enabled=false